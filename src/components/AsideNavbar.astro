---
import { navigationConfig } from "src/config/navigation-config";

const sideNavbarItems = navigationConfig.sidebarNavbar ?? [];
import { SidebarToggle } from "../components/SidebarToggle.jsx";
const { pathname } = Astro.url;
---

<nav class="sidebar bg-g-50 dark:bg-g-1000 md:border-0 md:bg-transparent">
  <SidebarToggle client:load> Menu </SidebarToggle>
  <div class="sidebar-items hidden md:block">
    {
      sideNavbarItems.map((section, idx) => (
        <div class="px-5 md:px-0 mt-5 md:mt-0">
          <h4 class="pb-2 text-small dark:text-g-100 font-medium">
            {section.title}
          </h4>
          <ul class="items flex flex-col gap-1 mb-5">
            {sideNavbarItems[idx]?.items?.map(({ href, title }) => (
              <li
                class:list={[
                  pathname === href && "bg-g-100 dark:bg-y-500/10 rounded-xl",
                ]}
              >
                <a
                  href={href}
                  class="relative z-10 block py-[6px] rounded-xl"
                  class:list={[
                    pathname === href &&
                      "text-dark dark:text-y-500 pl-3 sidebar-item-active",
                    pathname !== href &&
                      "text-g-500 hover:text-g-800 dark:text-g-500 dark:hover:text-y-500 transition-colors duration-200 sidebar-item",
                  ]}
                >
                  {title}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </div>
</nav>

<script>
  import gsap from "gsap";

  const sidebarLeft = document.querySelector(".sidebar") as HTMLElement;
  const items = sidebarLeft?.querySelector(".sidebar-items");
  const button = sidebarLeft?.querySelector(".sidebar-icon");

  const computedStyle = window.getComputedStyle(sidebarLeft);

  button?.addEventListener("click", () => {
    items?.classList.toggle("hidden");
    if (computedStyle.height === "41px") {
      sidebarLeft.style.height = "100%";
    } else {
      sidebarLeft.style.height = "41px";
    }
  });

  function foo(ev: Event, isEnter: Boolean) {
    const element = ev.target as HTMLElement;
    const item = element.closest(".sidebar-item");

    if (item) {
      gsap.to(item, {
        x: isEnter ? 12 : 0,
        duration: 0.35,
        ease: "power4.out",
      });
    }
  }

  sidebarLeft?.addEventListener("mouseenter", (ev) => foo(ev, true), true);
  sidebarLeft?.addEventListener("mouseleave", (ev) => foo(ev, false), true);
</script>
